---
title: "36-613 Group EDA Rough Draft, Fall 2025"
author: 
- "Vaibhav Jha, Alex Hill, Avery Wang"
subtitle: "Due Wednesday, September 24 by 11:59pm"
format:
  pdf:
    colorlinks: true
---

```{r setup, include=F}
library(tidyverse)
knitr::opts_chunk$set(echo = FALSE)
```

```{r Read Files}
linkedin <- read.csv("linkedin.csv")
companies <- read.csv("companies/companies_new.csv")
job_industries <- read.csv("jobs/job_industries_new.csv")
company_specialities <- read.csv("companies/company_specialities.csv")
employee_counts <- read.csv("companies/employee_counts_new.csv")
```

```{r}
linkedin |>
  ggplot(aes(x = log(views), y = log(applies))) +
  geom_point(size = 0.3) +
  labs(
    title = "Number of Applicants vs. Number of Views",
    caption = "Figure 1: Number of applicants against the number of views for each job posting, plotted on a log scale."
  ) +
  theme(plot.caption = element_text(hjust = 0.5))
```

```{r Most popular industries in job postings}
# Most popular industries in job postings
job_industries |>
  group_by(industry_name) |>
  summarize(count = n()) |>
  slice_max(count, n = 10) |>
  ggplot(aes(x = fct_reorder(industry_name, count), y = count, fill = "#F8766D")) +
  geom_bar(stat = "identity") +
  guides(x = guide_axis(angle = 45)) +
  theme(legend.position = "none",
        plot.caption = element_text(hjust = 0.5)) +
  labs(
    x = "Industry",
    y = "Number of Job Postings",
    title = "Industries with the Most Job Postings",
    caption = "Figure 2: The ten industries with the most job postings."
  )
```

```{r Most companies in each industry}
companies |>
  group_by(industry) |>
  summarize(count = n()) |>
  slice_max(count, n = 10) |>
  ggplot(aes(x = fct_reorder(industry, count), y = count, fill = "#F8766D")) +
  geom_bar(stat = "identity") +
  guides(x = guide_axis(angle = 45)) +
  theme(legend.position = "none",
        plot.caption = element_text(hjust = 0.5),
        plot.margin = margin(10, 20, 20, 40)) +
  labs(
    x = "Industry",
    y = "Number of Companies",
    title = "Industries with the Most Companies",
    caption = "Figure 3: The ten industries with the most distinct companies in the data."
  )
```

```{r Predict Applications}
model <- lm(log(applies) ~ log(views), data = linkedin)
linkedin <- linkedin |>
  # If unknown number of applicants, predict based on views
  mutate(applies = ifelse(is.na(applies),
                          exp(predict(model, newdata = data.frame(views = views))),
                          applies))

```

```{r Companies with most applications}
# Looks like the places with the most job postings are recruiting places, probably not what we're looking for

linkedin |>
  group_by(company_name) |>
    # Remove postings with no company name or unknown number of apps
  filter(company_name != "") |>
  drop_na(applies) |>
  summarize(applications = sum(applies)) |>
  slice_max(applications, n = 10) |>
  ggplot(aes(x = fct_reorder(company_name, applications), y = applications, fill = fct_reorder(company_name, applications))) +
  geom_bar(stat = "identity") +
  guides(x = guide_axis(angle = 45)) +
  theme(legend.position = "none",
        plot.caption = element_text(hjust = 0.5)) +
  labs(
    x = "Company",
    y = "Number of Total Job Applications",
    title = "Companies with the Most Job Applications",
    caption = "Figure 5: The ten companies with the most applications across all job postings in the data."
  )
```

```{r Select top industries}
top_industries <- c(
  "Staffing and Recruiting",
  "IT Services and IT Consulting",
  "Hospitals and Health Care",
  "Software Development",
  "Financial Services"
)

# Jobs only in top industries, one row per job
good_job_industries <- job_industries |>
  filter(industry_name %in% top_industries) |>
  mutate(dummy = 1) |>
  pivot_wider(
    names_from = industry_name,
    values_from = dummy,
    values_fill = 0
  ) |>
  group_by(job_id) |>
  mutate(
    `IT Services and IT Consulting` = sum(`IT Services and IT Consulting`),
    `Hospitals and Health Care` = sum(`Hospitals and Health Care`),
    `Software Development` = sum(`Software Development`),
    `Financial Services` = sum(`Financial Services`)
  ) |>
  select(-X) |>
  distinct()

# Get the most recent employee counts for each company
recent_employee_counts <- employee_counts |>
  group_by(company_id) |>
  slice_max(time_recorded, n = 1) |>
  select(-X)

# Join industries and employee counts to LinkedIn, do inner join to keep only good jobs and companies in the database
good_linkedin <- linkedin |>
  inner_join(good_job_industries, by = "job_id") |>
  inner_join(recent_employee_counts, by = "company_id") |>
  # Filter more than 100 apps and more than 1000 employees
  filter(applies > 100) |>
  filter(employee_count > 1000)
```

```{r Number of Applications vs. Employee Counts, Better, fig.width=8, fig.height=6}
good_linkedin_long <- good_linkedin |>
  select(company_name,
         employee_count,
         follower_count,
         applies,
         `IT Services and IT Consulting`,
         `Hospitals and Health Care`,
         `Software Development`,
         `Financial Services`,
         `Staffing and Recruiting`) |>
  pivot_longer(
    cols = c(-company_name, -employee_count, -follower_count, -applies),
    names_to = "industry",
    values_to = "value"
  ) |>
  filter(value == 1) |>
  select(-value) |>
  distinct()

good_linkedin_long |>
  ggplot(aes(x = employee_count, y = applies, color = industry)) +
  geom_point() +
  scale_x_log10() +
  labs(
    x = "Employee Count",
    y = "Number of Applications",
    title = "Number of Applications vs. Number of Company Employees",
    color = "Industry",
    caption = "Figure 7: Scatter plot of most recent employee count (log scale, minimum 1000)\nagainst the number of applicants to individual postings (minimum 100)."
  ) +
  theme(legend.position = c(0.8, 0.8),
        plot.caption = element_text(hjust = 0.5))
```



```{r}
good_linkedin_summary <- good_linkedin_long |>
  mutate(dummy = 1) |>
  pivot_wider(
    names_from = industry,
    values_from = dummy,
    values_fill = 0
  ) |>
  group_by(company_name) |>
  mutate(total_applications = sum(applies)) |>
  mutate(postings = n()) |>
  ungroup()

good_linkedin_summary |>
  ggplot(aes(x = employee_count, y = total_applications)) +
  geom_point() +
  scale_x_log10() +
  labs(
    x = "Employee Count", 
    y = "Total Number of Applications",
    title = "Number of Applications vs. Number of Company Employees",
    subtitle = "Applications Across All Job Postings"
  )

good_linkedin_summary |>
  ggplot(aes(x = follower_count, y = total_applications)) +
  geom_point() +
  scale_x_log10() +
  labs(
    x = "Follower Count", 
    y = "Total Number of Applications",
    title = "Number of Applications vs. Number of Company LinkedIn Followers",
    subtitle = "Applications Across All Job Postings"
  )
```

```{r Pair Plot, fig.height=6, fig.width=8}
library(GGally)
good_linkedin_long |>
  left_join(select(good_linkedin_summary, company_name, total_applications, postings)) |>
  select(employee_count, applies, total_applications, postings, industry) |>
  ggpairs(aes(color = industry, alpha = 0.3),
          upper = list(continuous = wrap("cor", size = 2))) +
  theme(axis.text = element_text(size = 5),
        plot.caption = element_text(hjust = 0.5)) +
  labs(
    caption = "Figure 8: Pair plot of summary table."
  )
```

https://finance.yahoo.com/news/concentrix-named-market-leader-digital-130500391.html